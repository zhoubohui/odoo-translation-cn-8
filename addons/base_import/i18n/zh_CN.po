# Chinese (Simplified) translation for openobject-addons
# Copyright (c) 2012 Rosetta Contributors and Canonical Ltd 2012
# This file is distributed under the same license as the openobject-addons package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: openobject-addons\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-13 10:49+0000\n"
"PO-Revision-Date: 2014-09-13 19:07+0800\n"
"Last-Translator: 保定-粉刷匠 <992102498@qq.com>\n"
"Language-Team: Chinese (Simplified) <zh_CN@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2013-03-08 05:36+0000\n"
"X-Generator: Poedit 1.6.9\n"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:437
#, python-format
msgid "(%d more)"
msgstr "(%d 更多)"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:369
#, python-format
msgid ""
". The issue is\n"
"            usually an incorrect file encoding."
msgstr "发生这个问题通常是文件编码错误"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:26
#, python-format
msgid ".CSV"
msgstr ".CSV"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:254
#, python-format
msgid ""
"A single column was found in the file, this often means the file separator "
"is incorrect"
msgstr "如果在文件中只找到一列，通常是因为文件分隔符是错的"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:160
#, python-format
msgid ""
"According to your need, you should use \n"
"                        one of these 3 ways to reference records in "
"relations. \n"
"                        Here is when you should use one or the other, \n"
"                        according to your need:"
msgstr ""
"根据您的需要，您会使用3种方式来表示记录之间的关系.\n"
"这里您可以根据需要选择其中一个:"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:233
#, python-format
msgid ""
"As an example, here is \n"
"                        purchase.order_functional_error_line_cant_adpat."
"CSV \n"
"                        file of some quotations you can import, based on "
"demo \n"
"                        data."
msgstr ""
"举个例子，文件purchase.order_functional_error_line_cant_adpat.CSV基于demo的数"
"据，包含可以导入的一些报价数据。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:298
#, python-format
msgid ""
"As an example, suppose you have a SQL database \n"
"                        with two tables you want to import: companies and \n"
"                        persons. Each person belong to one company, so you \n"
"                        will have to recreate the link between a person "
"and \n"
"                        the company he work for. (If you want to test this \n"
"                        example, here is a"
msgstr ""
"例如,假定您要导入有两个表(companies和persons)的SQL数据库.\n"
"每个人属于一个公司，您需要重新生成个人与其工作公司之间的关系.\n"
"(如果您要测试这个例子,这里就有一个"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:330
#, python-format
msgid ""
"As you can see in this file, Fabien and Laurence \n"
"                        are working for the Bigees company (company_1) and \n"
"                        Eric is working for the Organi company. The "
"relation \n"
"                        between persons and companies is done using the \n"
"                        External ID of the companies. We had to prefix the \n"
"                        \"External ID\" by the name of the table to avoid "
"a \n"
"                        conflict of ID between persons and companies "
"(person_1 \n"
"                        and company_1 who shared the same ID 1 in the "
"orignial \n"
"                        database)."
msgstr ""
"正如您在这个文件所看到的，Fabien和Laurence\n"
"在Bigees公司工作,\n"
"Eric在Organi公司工作.\n"
"个人与公司的关系用公司的外部ID来表示.\n"
"我们在表名加上前缀\"外部ID\"来避免个人与公司的ID冲突\n"
"(perons_1和company_1在源数据库中共享相同的ID 1)"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:105
#, python-format
msgid ""
"By default the Import preview is set on commas as \n"
"                        field separators and quotation marks as text \n"
"                        delimiters. If your csv file does not have these \n"
"                        settings, you can modify the File Format Options \n"
"                        (displayed under the Browse CSV file bar after you \n"
"                        select your file)."
msgstr ""
"默认情况下，导入预览中，逗号是字段分隔符，引号是文本的定界符.\n"
"如果您的CSV文件不是这样设置，您可以修改文件格式选项\n"
"(选择文件后，显示在浏览CSV文件下面)."

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:30
#, python-format
msgid "CSV File:"
msgstr "CSV文件："

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:216
#, python-format
msgid "CSV file for Manufacturer, Retailer"
msgstr "从制造商，零售商导出CSV文件"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:180
#, python-format
msgid "CSV file for Products"
msgstr "产品CSV文件"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:179
#, python-format
msgid "CSV file for categories"
msgstr "目录CSV文件"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:249
#, python-format
msgid "Can I import several times the same record?"
msgstr "我可以导入多次相同的记录？"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:20
#, python-format
msgid "Cancel"
msgstr "取消"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:179
#: code:addons\base_import\static\src\js\import.js:190
#, python-format
msgid "Comma"
msgstr "逗号"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:158
#, python-format
msgid ""
"Country/Database \n"
"                        ID: 21"
msgstr ""
"国家/数据库\n"
" ID: 21"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:152
#, python-format
msgid ""
"Country/Database ID: the unique Odoo ID for a \n"
"                        record, defined by the ID postgresql column"
msgstr "国家/数据库ID：Odoo的独特的ID为"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:159
#, python-format
msgid "Country/External ID: base.be"
msgstr "国家/外部ID:base.be"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:154
#, python-format
msgid ""
"Country/External ID: the ID of this record \n"
"                        referenced in another application (or the .XML "
"file \n"
"                        that imported it)"
msgstr ""
"国家/外部ID:记录的ID指向另一个程序\n"
"或者引入的.XML文件)"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:158
#, python-format
msgid "Country: Belgium"
msgstr "国家:比利时"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:151
#, python-format
msgid "Country: the name or code of the country"
msgstr "国家：国家的名称或代码"

#. module: base_import
#: field:base_import.import,create_uid:0
#: field:base_import.tests.models.char,create_uid:0
#: field:base_import.tests.models.char.noreadonly,create_uid:0
#: field:base_import.tests.models.char.readonly,create_uid:0
#: field:base_import.tests.models.char.required,create_uid:0
#: field:base_import.tests.models.char.states,create_uid:0
#: field:base_import.tests.models.char.stillreadonly,create_uid:0
#: field:base_import.tests.models.m2o,create_uid:0
#: field:base_import.tests.models.m2o.related,create_uid:0
#: field:base_import.tests.models.m2o.required,create_uid:0
#: field:base_import.tests.models.m2o.required.related,create_uid:0
#: field:base_import.tests.models.o2m,create_uid:0
#: field:base_import.tests.models.o2m.child,create_uid:0
#: field:base_import.tests.models.preview,create_uid:0
msgid "Created by"
msgstr "创建人"

#. module: base_import
#: field:base_import.import,create_date:0
#: field:base_import.tests.models.char,create_date:0
#: field:base_import.tests.models.char.noreadonly,create_date:0
#: field:base_import.tests.models.char.readonly,create_date:0
#: field:base_import.tests.models.char.required,create_date:0
#: field:base_import.tests.models.char.states,create_date:0
#: field:base_import.tests.models.char.stillreadonly,create_date:0
#: field:base_import.tests.models.m2o,create_date:0
#: field:base_import.tests.models.m2o.related,create_date:0
#: field:base_import.tests.models.m2o.required,create_date:0
#: field:base_import.tests.models.m2o.required.related,create_date:0
#: field:base_import.tests.models.o2m,create_date:0
#: field:base_import.tests.models.o2m.child,create_date:0
#: field:base_import.tests.models.preview,create_date:0
msgid "Created on"
msgstr "创建在"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:243
#, python-format
msgid "Customers and their respective contacts"
msgstr "供应商和他们各自的联系人"

#. module: base_import
#: code:addons\base_import\models.py:116 code:addons\base_import\models.py:122
#, python-format
msgid "Database ID"
msgstr "数据库ID"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:288
#, python-format
msgid "Don't import"
msgstr "不导入"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:77
#, python-format
msgid "Encoding:"
msgstr "编码："

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:414
#, python-format
msgid "Everything seems valid."
msgstr "看起来都有效。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\models.py:81 code:addons\base_import\models.py:115
#: code:addons\base_import\static\src\xml\import.xml:87
#: code:addons\base_import\static\src\xml\import.xml:92
#, python-format
msgid "External ID"
msgstr "外部ID"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:324
#, python-format
msgid ""
"External ID,Name,Is a \n"
"                        Company,Related Company/External ID"
msgstr "外部ID,名称,是否公司,相关公司/外部ID"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:312
#, python-format
msgid "External ID,Name,Is a Company"
msgstr "外部ID，名称，是一个公司"

#. module: base_import
#: field:base_import.import,file:0
msgid "File"
msgstr "文件"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:39
#, python-format
msgid "File Format Options…"
msgstr "文件格式选项……"

#. module: base_import
#: field:base_import.import,file_name:0
msgid "File Name"
msgstr "文件名"

#. module: base_import
#: field:base_import.import,file_type:0
msgid "File Type"
msgstr "文件类型"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:237
#, python-format
msgid "File for some Quotations"
msgstr "文件的一些引用"

#. module: base_import
#: help:base_import.import,file:0
msgid "File to check and/or import, raw binary (not base64)"
msgstr "文件的审核或导入， 原始二进制编码（不是base64编码）"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:148
#, python-format
msgid ""
"For example, to \n"
"                        reference the country of a contact, Odoo proposes \n"
"                        you 3 different fields to import:"
msgstr ""
"例如，要\n"
"引用国家的关系，Odoo给\n"
"你3个不同字段的导入"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:156
#, python-format
msgid ""
"For the country \n"
"                        Belgium, you can use one of these 3 ways to import:"
msgstr "对于比利时，您可以用这三种方式中的一种进行导入:"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:78
#, python-format
msgid "Frequently Asked Questions"
msgstr "常见问题集"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:461
#, python-format
msgid "Get all possible values"
msgstr "获取所有可能的值"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:448
#, python-format
msgid "Here are the possible values:"
msgstr "可能的值有："

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:371
#, python-format
msgid "Here is the start of the file we could not import:"
msgstr "下面是我们无法导入的起始文件："

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:119
#, python-format
msgid ""
"How can I change the CSV file format options when \n"
"                        saving in my spreadsheet application?"
msgstr ""
"当我在电子表格程序中保存文档时 \n"
"                        我应该怎样更改CSV文件选项？"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:207
#, python-format
msgid ""
"How can I import a many2many relationship field \n"
"                        (e.g. a customer that has multiple tags)?"
msgstr "如何引入一个多对多的关系字段(例如 一个客户有多个标签)?"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:222
#, python-format
msgid ""
"How can I import a one2many relationship (e.g. several \n"
"                        Order Lines of a Sales Order)?"
msgstr "如何引入一个一对多的关系(例如有几个明细分录的销售订单)?"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:281
#, python-format
msgid ""
"How to export/import different tables from an SQL \n"
"                        application to Odoo?"
msgstr ""
"如何从一个Odoo的SQL应用中 \n"
"导入或导出不同的表？"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:198
#, python-format
msgid ""
"However if you do not wish to change your \n"
"                        configuration of product categories, we recommend "
"you \n"
"                        use make use of the external ID for this field \n"
"                        'Category'."
msgstr ""
"然而，如果你不想修改产品分类设置，\n"
"我们建议您在'Category'字段使用外部ID"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:87
#: code:addons\base_import\static\src\xml\import.xml:92
#: field:base_import.import,id:0 field:base_import.tests.models.char,id:0
#: field:base_import.tests.models.char.noreadonly,id:0
#: field:base_import.tests.models.char.readonly,id:0
#: field:base_import.tests.models.char.required,id:0
#: field:base_import.tests.models.char.states,id:0
#: field:base_import.tests.models.char.stillreadonly,id:0
#: field:base_import.tests.models.m2o,id:0
#: field:base_import.tests.models.m2o.related,id:0
#: field:base_import.tests.models.m2o.required,id:0
#: field:base_import.tests.models.m2o.required.related,id:0
#: field:base_import.tests.models.o2m,id:0
#: field:base_import.tests.models.o2m.child,id:0
#: field:base_import.tests.models.preview,id:0
#, python-format
msgid "ID"
msgstr "ID"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:189
#, python-format
msgid ""
"If for example you have two product categories \n"
"                        with the child name \"Sellable\" (ie. \"Misc. \n"
"                        Products/Sellable\" & \"Other Products/Sellable\"),\n"
"                        your validation is halted but you may still import \n"
"                        your data. However, we recommend you do not import "
"the \n"
"                        data because they will all be linked to the first \n"
"                        'Sellable' category found in the Product Category "
"list \n"
"                        (\"Misc. Products/Sellable\"). We recommend you "
"modify \n"
"                        one of the duplicates' values or your product "
"category \n"
"                        hierarchy."
msgstr ""
"例如您有两个产品分类有相同的子类名称\"Sellable\"\n"
"(\"Misc. Products/Sellable\" 和 \"Other Products/Sellable\")，\n"
"验证会停止，但是您还是可以导入数据.\n"
"我们建议您不要导入，因为产品都会关联到产品分类中的第一个'Sellable',\n"
"也就是\"Misc. Products/Sellable\".我们建议您修改重复的产品分类或者产品分类分"
"类树."

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:69
#, python-format
msgid ""
"If the file contains\n"
"                the column names, Odoo can try auto-detecting the\n"
"                field corresponding to the column. This makes imports\n"
"                simpler especially when the file has many columns."
msgstr ""
"如果文件中包含\n"
"                列的名称，doo的可以尝试自动检测\n"
"                字段对应的列。这使得导入\n"
"                简单，尤其是当文件有很多列。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:58
#, python-format
msgid ""
"If the model uses openchatter, history tracking                             "
"will set up subscriptions and send notifications                             "
"during the import, but lead to a slower import."
msgstr ""
"如果该数据模型声明使用openchatter，历史跟踪功能，系统就会自动设置订阅和发送通"
"知，导入期间，会执行很慢。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:271
#, python-format
msgid ""
"If you do not set all fields in your CSV file, \n"
"                        Odoo will assign the default value for every non \n"
"                        defined fields. But if you\n"
"                        set fields with empty values in your CSV file, "
"Odoo \n"
"                        will set the EMPTY value in the field, instead of \n"
"                        assigning the default value."
msgstr ""
"如果您没有在CSV文件中设置所有的字段,\n"
"Odoo会对未定义字段指定默认值.\n"
"但如果您在CSV文件中指定了空值的字段,\n"
"Odoo会在这些字段中设置EMPTY值,而不是默认值。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:123
#, python-format
msgid ""
"If you edit and save CSV files in speadsheet \n"
"                        applications, your computer's regional settings "
"will \n"
"                        be applied for the separator and delimiter. \n"
"                        We suggest you use OpenOffice or LibreOffice Calc \n"
"                        as they will allow you to modify all three options \n"
"                        (in 'Save As' dialog box > Check the box 'Edit "
"filter \n"
"                        settings' > Save)."
msgstr ""
"如果您在电子表格程序中编辑和保存CSV文件，\n"
"电脑上的区域设置决定了分隔符.\n"
"我们建议您使用OpenOffice或LibreOffice Calc, \n"
"这两个软件允许您进行修改(操作路径:\n"
"'另存为'对话框 > 勾上'编辑过滤器设置' > 保存)."

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:252
#, python-format
msgid ""
"If you import a file that contains one of the \n"
"                        column \"External ID\" or \"Database ID\", records "
"that \n"
"                        have already been imported will be modified instead "
"of \n"
"                        being created. This is very usefull as it allows "
"you \n"
"                        to import several times the same CSV file while "
"having \n"
"                        made some changes in between two imports. Odoo "
"will \n"
"                        take care of creating or modifying each record \n"
"                        depending if it's new or not."
msgstr ""
"如果您导入包含列名\"External ID\"或者\"Database ID\"的文件，\n"
"已经导入的记录将被修改，不会新增。如果您修改了已经导入的CSV文件，\n"
"需要重新导入时，这个功能特别有用。Odoo会判断应该新增还是修改记录。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:285
#, python-format
msgid ""
"If you need to import data from different tables, \n"
"                        you will have to recreate relations between "
"records \n"
"                        belonging to different tables. (e.g. if you import \n"
"                        companies and persons, you will have to recreate "
"the \n"
"                        link between each person and the company they work \n"
"                        for)."
msgstr ""
"如果您要从不同表引入数据，您必须重新生成不同表记录之间的关系.\n"
"(例如,您要导入公司和人员,您必须重新生成每个人员和他们工作的公司之间的关系)."

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:226
#, python-format
msgid ""
"If you want to import sales order having several \n"
"                        order lines; for each order line, you need to "
"reserve \n"
"                        a specific row in the CSV file. The first order "
"line \n"
"                        will be imported on the same row as the "
"information \n"
"                        relative to order. Any additional lines will need "
"an \n"
"                        addtional row that does not have any information "
"in \n"
"                        the fields relative to the order."
msgstr ""
"如果您要导入有多条分录的销售订单;对每个分录,您需要在CSV文件中保留一个特定的"
"行.\n"
"第一条分录包含订单表头信息，其它分录不需要订单表头信息。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:18
#: code:addons\base_import\static\src\xml\import.xml:405
#, python-format
msgid "Import"
msgstr "导入"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:7
#, python-format
msgid "Import a CSV File"
msgstr "导入一个CSV文件"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:369
#, python-format
msgid "Import preview failed due to:"
msgstr "由于以下原因，导入预览失败："

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:84
#, python-format
msgid ""
"In order to re-create relationships between\n"
"                        different records, you should use the unique\n"
"                        identifier from the original application and\n"
"                        map it to the"
msgstr ""
"为了重新生成不同记录之间的关系，\n"
"您要使用原应用的唯一标识符,并且将其映射到"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:323
#, python-format
msgid "It will produce the following CSV file:"
msgstr "这将产生以下的CSV文件："

#. module: base_import
#: field:base_import.import,write_uid:0
#: field:base_import.tests.models.char,write_uid:0
#: field:base_import.tests.models.char.noreadonly,write_uid:0
#: field:base_import.tests.models.char.readonly,write_uid:0
#: field:base_import.tests.models.char.required,write_uid:0
#: field:base_import.tests.models.char.states,write_uid:0
#: field:base_import.tests.models.char.stillreadonly,write_uid:0
#: field:base_import.tests.models.m2o,write_uid:0
#: field:base_import.tests.models.m2o.related,write_uid:0
#: field:base_import.tests.models.m2o.required,write_uid:0
#: field:base_import.tests.models.m2o.required.related,write_uid:0
#: field:base_import.tests.models.o2m,write_uid:0
#: field:base_import.tests.models.o2m.child,write_uid:0
#: field:base_import.tests.models.preview,write_uid:0
msgid "Last Updated by"
msgstr "最后更新被"

#. module: base_import
#: field:base_import.import,write_date:0
#: field:base_import.tests.models.char,write_date:0
#: field:base_import.tests.models.char.noreadonly,write_date:0
#: field:base_import.tests.models.char.readonly,write_date:0
#: field:base_import.tests.models.char.required,write_date:0
#: field:base_import.tests.models.char.states,write_date:0
#: field:base_import.tests.models.char.stillreadonly,write_date:0
#: field:base_import.tests.models.m2o,write_date:0
#: field:base_import.tests.models.m2o.related,write_date:0
#: field:base_import.tests.models.m2o.required,write_date:0
#: field:base_import.tests.models.m2o.required.related,write_date:0
#: field:base_import.tests.models.o2m,write_date:0
#: field:base_import.tests.models.o2m.child,write_date:0
#: field:base_import.tests.models.preview,write_date:0
msgid "Last Updated on"
msgstr "最后更新在"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:55
#, python-format
msgid "Map your data to Odoo"
msgstr "映射数据到Odoo"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:129
#, python-format
msgid ""
"Microsoft Excel will allow \n"
"                        you to modify only the encoding when saving \n"
"                        (in 'Save As' dialog box > click 'Tools' dropdown \n"
"                        list > Encoding tab)."
msgstr ""
"保存文件时,Microsoft Excel允许你只是修改编码方式\n"
"操作方法如下:'另存为'对话框 > 单击'工具'下拉列表 > Web选项  > 编码 选项卡."

#. module: base_import
#: field:base_import.import,res_model:0
msgid "Model"
msgstr "模式"

#. module: base_import
#: field:base_import.tests.models.preview,name:0
msgid "Name"
msgstr "名称"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:81
#, python-format
msgid "Need to import data from an other application?"
msgstr "需要从其它应用程序中导入数据？"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:336
#, python-format
msgid "Normal Fields"
msgstr "普通字段"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:110
#, python-format
msgid ""
"Note that if your CSV file \n"
"                        has a tabulation as separator, Odoo will not \n"
"                        detect the separations. You will need to change "
"the \n"
"                        file format options in your spreadsheet "
"application. \n"
"                        See the following question."
msgstr ""
"注意：如果你的CSV文件\n"
"使用了制表符作为分隔符，Odoo将无法\n"
"识别。需要您用Excel等软件来\n"
"修正文件格式方能正确识别。。\n"
"详见下文"

#. module: base_import
#: field:base_import.tests.models.preview,othervalue:0
msgid "Other Variable"
msgstr "其它变量"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:240
#, python-format
msgid "Purchase orders with their respective purchase order lines"
msgstr "采购单与各自采购的订单行"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:79
#, python-format
msgid "Quoting:"
msgstr "引用："

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:337
#, python-format
msgid "Relation Fields"
msgstr "关联字段"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:35
#, python-format
msgid "Reload data to check changes."
msgstr "刷新数据，以检查变化。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:24
#, python-format
msgid "Select the"
msgstr "选择"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:180
#, python-format
msgid "Semicolon"
msgstr "分号"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:78
#, python-format
msgid "Separator:"
msgstr "分割符："

#. module: base_import
#: field:base_import.tests.models.preview,somevalue:0
msgid "Some Value"
msgstr "一些值"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:141
#, python-format
msgid ""
"Some fields define a relationship with another \n"
"                        object. For example, the country of a contact is a \n"
"                        link to a record of the 'Country' object. When you \n"
"                        want to import such fields, Odoo will have to \n"
"                        recreate links between the different records. \n"
"                        To help you import such fields, Odoo provides 3 \n"
"                        mechanisms. You must use one and only one "
"mechanism \n"
"                        per field you want to import."
msgstr ""
"某些字段指向另一个对象.例如，联系人里面的国家字段,\n"
"就指向'国家'这种对象.引入这些字段时,Odoo会重新生成\n"
"不同记录之间的关系.为便于您引入这种字段,Odoo\n"
"提供3种机制。每个字段你必须仅使用一种机制。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:182
#, python-format
msgid "Space"
msgstr "空格"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:181
#, python-format
msgid "Tab"
msgstr "制表符"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:92
#, python-format
msgid "The"
msgstr "这个"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:67
#, python-format
msgid ""
"The first row of the\n"
"                file contains the label of the column"
msgstr "文件的第一行包含了列名"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:241
#, python-format
msgid ""
"The following CSV file shows how to import \n"
"                        customers and their respective contacts"
msgstr ""
"下面的CSV文件显示了如何导入 \n"
"                        客户和他们的联系人"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:238
#, python-format
msgid ""
"The following CSV file shows how to import purchase \n"
"                        orders with their respective purchase order lines:"
msgstr "下面的CSV文件示范如何导入采购单及其明细："

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:211
#, python-format
msgid ""
"The tags should be separated by a comma without any \n"
"                        spacing. For example, if you want you customer to "
"be \n"
"                        lined to both tags 'Manufacturer' and 'Retailer' \n"
"                        then you will encode it as follow \"Manufacturer,\n"
"                        Retailer\" in the same column of your CSV file."
msgstr ""
"标签应以逗号分隔，没有任何间隔。\n"
"例如，如果你希望您的客户\n"
"有“制造商”和”零售商“这两个标签，\n"
"那么在CSV文件中，你应在同一列中\n"
"将其编码为“制造商，零售商”。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:339
#, python-format
msgid ""
"The two files produced are ready to be imported in \n"
"                        Odoo without any modifications. After having \n"
"                        imported these two CSV files, you will have 4 "
"contacts \n"
"                        and 3 companies. (the firsts two contacts are "
"linked \n"
"                        to the first company). You must first import the \n"
"                        companies and then the persons."
msgstr ""
"生成的两个文件不需要任何修改就可以直接导入Odoo。\n"
"导入两个CSV文件后，您有4个联系人和3个公司.\n"
"(前两个联系人关联第一个公司).您必须先导入公司，然后导入人员。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:311
#, python-format
msgid "This SQL command will create the following CSV file:"
msgstr "这个SQL命令将创建下面这个CSV文件："

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:259
#, python-format
msgid ""
"This feature \n"
"                        allows you to use the Import/Export tool of Odoo "
"to \n"
"                        modify a batch of records in your favorite "
"spreadsheet \n"
"                        application."
msgstr ""
"这个功能允许您用Odoo的导入/导出工具在您熟悉的电子表格程序中批量修改记录。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:316
#, python-format
msgid ""
"To create the CSV file for persons, linked to \n"
"                        companies, we will use the following SQL command "
"in \n"
"                        PSQL:"
msgstr ""
"为生成所属公司的persons的CSV文件\n"
"我们在PSQL里面使用以下SQL命令:"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:290
#, python-format
msgid ""
"To manage relations between tables, \n"
"                        you can use the \"External ID\" facilities of "
"Odoo. \n"
"                        The \"External ID\" of a record is the unique "
"identifier \n"
"                        of this record in another application. This "
"\"External \n"
"                        ID\" must be unique accoss all the records of all \n"
"                        objects, so it's a good practice to prefix this \n"
"                        \"External ID\" with the name of the application "
"or \n"
"                        table. (like 'company_1', 'person_1' instead of '1')"
msgstr ""
"为管理表间关系,您可以使用Odoo的\"外部ID\"机制.\n"
"一个记录的\"外部ID\"另一个应用里面记录的唯一值.\n"
"所有对象记录的\"外部ID\"必须是唯一的,一个好的做法是在\"外部ID\"\n"
"加上应用或者表的名字.(例如'company_1', 'person_1'，不要仅仅是'1')"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:61
#, python-format
msgid "Track history during import"
msgstr "导入时跟踪导入历史"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:165
#, python-format
msgid ""
"Use \n"
"                        Country/Database ID: You should rarely use this \n"
"                        notation. It's mostly used by developers as it's "
"main \n"
"                        advantage is to never have conflicts (you may have \n"
"                        several records with the same name, but they "
"always \n"
"                        have a unique Database ID)"
msgstr ""
"使用\n"
"Country/Database ID: 你将很少用这中\n"
"标记法. 这种标记法对开发者用来不产生\n"
"冲突有好处 (可能有些记录有相同的名\n"
"但它们有不同的Database ID)"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:170
#, python-format
msgid ""
"Use \n"
"                        Country/External ID: Use External ID when you "
"import \n"
"                        data from a third party application."
msgstr "使用"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:163
#, python-format
msgid ""
"Use Country: This is \n"
"                        the easiest way when your data come from CSV files \n"
"                        that have been created manually."
msgstr ""
"使用国家: \n"
"当你数据从CSV文件手动创建，这是\n"
"最简单的方法."

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:15
#, python-format
msgid "Validate"
msgstr "验证"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:305
#, python-format
msgid ""
"We will first export all companies and their \n"
"                        \"External ID\". In PSQL, write the following "
"command:"
msgstr ""
"首先，我们将导出所有的公司及其\"外部ID\".\n"
"在PSQL中，输入以下命令:"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:185
#, python-format
msgid "What can I do if I have multiple matches for a field?"
msgstr "如果我有多对一的字段怎么做？"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:101
#, python-format
msgid ""
"What can I do when the Import preview table isn't \n"
"                        displayed correctly?"
msgstr "导入预览的表显示错误时，怎么办？"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:267
#, python-format
msgid ""
"What happens if I do not provide a value for a \n"
"                        specific field?"
msgstr "如果我没有给一个字段提供一个值，会出现什么情况？"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:137
#, python-format
msgid ""
"What's the difference between Database ID and \n"
"                        External ID?"
msgstr "数据库ID和外部ID之间的区别是什么？"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:173
#, python-format
msgid ""
"When you use External IDs, you can import CSV files \n"
"                        with the \"External ID\" column to define the "
"External \n"
"                        ID of each record you import. Then, you will be "
"able \n"
"                        to make a reference to that record with columns "
"like \n"
"                        \"Field/External ID\". The following two CSV files "
"give \n"
"                        you an example for Products and their Categories."
msgstr ""
"当你使用External IDs,导入CSV文件\n"
"你导入的每一条记录得External\n"
"ID 用 \"External ID\" 列来定义 . 然后, \n"
"你将用一个列为\"Field/External ID\" 的\n"
"数据记录做参考. 下面的两个 CSV 文件\n"
"给你一个产品和产品分类的例子。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:90
#, python-format
msgid "XXX/External ID"
msgstr "XXX/外部ID"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:90
#, python-format
msgid "XXX/ID"
msgstr "XXX/ID"

#. module: base_import
#: code:addons\base_import\models.py:271
#, python-format
msgid "You must configure at least one field to import"
msgstr "导入至少要配置一个字段。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:431
#, python-format
msgid "at row %d"
msgstr "在第 %d 行"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\js\import.js:433
#, python-format
msgid "between rows %d and %d"
msgstr "在 %d 列到 %d 之间"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:87
#, python-format
msgid ""
"column in Odoo. When you\n"
"                        import an other record that links to the first\n"
"                        one, use"
msgstr ""
"Odoo的列.当你\n"
"                        导入一个记录，这个记录连接第一\n"
"                        个记录，使用"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:313
#, python-format
msgid "company_1,Bigees,True"
msgstr "company_1,Bigees,True"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:314
#, python-format
msgid "company_2,Organi,True"
msgstr "company_2,Organi,True"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:315
#, python-format
msgid "company_3,Boum,True"
msgstr "company_3,Boum,True"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:307
#, python-format
msgid ""
"copy \n"
"                        (select 'company_'||id as \"External ID\","
"company_name \n"
"                        as \"Name\",'True' as \"Is a Company\" from "
"companies) TO \n"
"                        '/tmp/company.csv' with CSV HEADER;"
msgstr ""
"复制\n"
"(select 'company_'||id as \"External ID\",company_name\n"
"as \"Name\",'True' as \"Is a Company\" from companies) TO\n"
"'/tmp/company.csv' with CSV HEADER"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:318
#, python-format
msgid ""
"copy (select \n"
"                        'person_'||id as \"External ID\",person_name as \n"
"                        \"Name\",'False' as \"Is a Company\",'company_'||"
"company_id\n"
"                         as \"Related Company/External ID\" from persons) "
"TO \n"
"                        '/tmp/person.csv' with CSV"
msgstr ""
"copy (select \n"
"                        'person_'||id as \"External ID\",person_name as \n"
"                        \"Name\",'False' as \"Is a Company\",'company_'||"
"company_id\n"
"                         as \"Related Company/External ID\" from persons) "
"TO \n"
"                        '/tmp/person.csv' with CSV"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:303
#, python-format
msgid "dump of such a PostgreSQL database"
msgstr "复制PostgreSQL数据库"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:26
#, python-format
msgid ""
"file to import. If you need a sample importable file, you\n"
"            can use the export tool to generate one."
msgstr ""
"文件来导入。 如果你需要一个导入文件样例，\n"
"你可以用导出工具生成一个。"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:19
#, python-format
msgid "or"
msgstr "或"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:326
#, python-format
msgid "person_1,Fabien,False,company_1"
msgstr "person_1,Fabien,False,company_1"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:327
#, python-format
msgid "person_2,Laurence,False,company_1"
msgstr "person_2,Laurence,False,company_1"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:328
#, python-format
msgid "person_3,Eric,False,company_2"
msgstr "person_3,Eric,False,company_2"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:329
#, python-format
msgid "person_4,Ramsy,False,company_3"
msgstr "person_4,Ramsy,False,company_3"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:90
#, python-format
msgid "to the original unique identifier."
msgstr "原有唯一标示。"

#. module: base_import
#: field:base_import.tests.models.char,value:0
#: field:base_import.tests.models.char.noreadonly,value:0
#: field:base_import.tests.models.char.readonly,value:0
#: field:base_import.tests.models.char.required,value:0
#: field:base_import.tests.models.char.states,value:0
#: field:base_import.tests.models.char.stillreadonly,value:0
#: field:base_import.tests.models.m2o,value:0
#: field:base_import.tests.models.m2o.related,value:0
#: field:base_import.tests.models.m2o.required,value:0
#: field:base_import.tests.models.m2o.required.related,value:0
#: field:base_import.tests.models.o2m,value:0
#: field:base_import.tests.models.o2m.child,parent_id:0
#: field:base_import.tests.models.o2m.child,value:0
msgid "unknown"
msgstr "未知"

#. module: base_import
#. openerp-web
#: code:addons\base_import\static\src\xml\import.xml:92
#, python-format
msgid ""
"will also be used to update the original\n"
"                        import if you need to re-import modified data\n"
"                        later, it's thus good practice to specify it\n"
"                        whenever possible"
msgstr ""
"如果您重新导入修改的数据,之前导入的数据就会被更新,\n"
"实际操作中都可以指定这个参数."

#~ msgid ")."
#~ msgstr ")."

#~ msgid "base_import.import"
#~ msgstr "base_import.import"

#~ msgid "base_import.tests.models.char"
#~ msgstr "base_import.tests.models.char"

#~ msgid "base_import.tests.models.char.noreadonly"
#~ msgstr "base_import.tests.models.char.noreadonly"

#~ msgid "base_import.tests.models.char.readonly"
#~ msgstr "base_import.tests.models.char.readonly"

#~ msgid "base_import.tests.models.char.required"
#~ msgstr "base_import.tests.models.char.required"

#~ msgid "base_import.tests.models.char.states"
#~ msgstr "base_import.tests.models.char.states"

#~ msgid "base_import.tests.models.char.stillreadonly"
#~ msgstr "base_import.tests.models.char.stillreadonly"

#~ msgid "base_import.tests.models.m2o"
#~ msgstr "base_import.tests.models.m2o"

#~ msgid "base_import.tests.models.m2o.related"
#~ msgstr "base_import.tests.models.m2o.related"

#~ msgid "base_import.tests.models.m2o.required"
#~ msgstr "base_import.tests.models.m2o.required"

#~ msgid "base_import.tests.models.m2o.required.related"
#~ msgstr "base_import.tests.models.m2o.required.related"

#~ msgid "base_import.tests.models.o2m"
#~ msgstr "base_import.tests.models.o2m"

#~ msgid "base_import.tests.models.o2m.child"
#~ msgstr "base_import.tests.models.o2m.child"

#~ msgid "base_import.tests.models.preview"
#~ msgstr "base_import.tests.models.preview"
